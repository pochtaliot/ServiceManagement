@page "/"
@inherits ComponentClasses.HomeComponent
@rendermode InteractiveServer
@using Microsoft.Web.Administration

<h3 class="text-primary">Service and IIS Manager</h3>

<div class="spinner-border @(PreloadService.WaitingForInitialStatusesRead ? "" : "d-none")" role="status">
    <span class="sr-only"></span>
</div>

@foreach (var server in Config.Value.Servers)
{
    <div class="card my-3">
        <div class="card-header">
            <h4 class="card-title">@server.Alias (@server.Name)</h4>
        </div>
        <div class="card-body">
            @if (server.Services.Any())
            {
                <h5 class="text-secondary">Windows Services</h5>
                <table class="table-striped table-hover table table-fixed">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var service in server.Services)
                        {
                            <tr>
                                <td class="align-middle">@service.Name</td>
                                <td class="align-middle">
                                    @if (!service.IsInChangeState)
                                    {
                                        <span class="service-status @(service.IsRunning ? "running-status" : "stopped-status")">@(service.IsRunning ? "Running" : "Stopped")</span>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!service.IsInChangeState)
                                        {
                                        @if (service.IsRunning)
                                        {
                                        <i class="bi bi-stop-fill color-red icon-button-md" @onclick="() => StopService(server.Name, service)"></i>
                                        }
                                        else
                                        {
                                        <i class="bi bi-play-fill color-green icon-button-md" @onclick="() => StartService(server.Name, service, service.StartupArguments)"></i>
                                        }
                                        }
                                        <div class="spinner-border margin-left-10 @(service.IsInChangeState ? "" : "d-none")" role="status">
                                            <span class="sr-only"></span>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            @if (server.AppPools.Any())
            {
                <h5 class="text-secondary">IIS App Pools</h5>
                <table class="table-striped table-hover table table-fixed">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var appPool in server.AppPools)
                        {
                            <tr>
                                <td class="align-middle">@appPool.Name</td>
                                <td class="align-middle">
                                    @if (!appPool.IsInChangeState)
                                    {
                                        <span class="service-status @(appPool.IsRunning ? "running-status" : "stopped-status")">@(appPool.IsRunning ? "Running" : "Stopped")</span>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        @if (!appPool.IsInChangeState)
                                        {
                                        @if (appPool.IsRunning)
                                        {
                                        <i class="bi bi-stop-fill color-red icon-button-md" @onclick="() => StopAppPool(server, appPool)"></i>
                                        }
                                        else
                                        {
                                        <i class="bi bi-play-fill color-green icon-button-md" @onclick="() => StartAppPool(server, appPool)"></i>
                                        }
                                        }
                                        <div class="spinner-border margin-left-10 @(appPool.IsInChangeState ? "" : "d-none")" role="status">
                                            <span class="sr-only"></span>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    
}
